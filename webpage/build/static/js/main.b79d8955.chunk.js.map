{"version":3,"sources":["App.test.js","setupTests.js","tables.js","../src sync /^.*$","metadata.js","App.js","index.js","_config.yml","architecture.jpg","figures/architecture.png","figures/face-relationships.png","instructions.txt","logo.svg","Authors.js","Abstract.js","Figure.js","authorlist.js","figures.js","reportWebVitals.js"],"names":["test","render","linkElement","screen","getByText","expect","toBeInTheDocument","tables","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","metadata","img","abstract","tldr","venue","paper","bibtex","github","App","fluid","style","width","paddingLeft","paddingRight","align","authors","authorlist","number","entries","figures","i","k","v","replace","image","caption","maxWidth","paddingTop","margin","backgroundColor","padding","borderRadius","fontFamily","fontSize","color","ReactDOM","StrictMode","document","getElementById","reportWebVitals","Authors","props","institutions","author","inst","institution","split","x","trim","push","Fragment","href","url","name","join","length","paddingBottom","className","n","target","Abstract","Figure","src","require","default","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB"],"mappings":"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","file":"static/js/main.b79d8955.chunk.js","sourcesContent":["import { render, screen } from '@testing-library/react';\nimport App from './App';\n\ntest('renders learn react link', () => {\n  render(<App />);\n  const linkElement = screen.getByText(/learn react/i);\n  expect(linkElement).toBeInTheDocument();\n});\n","// jest-dom adds custom jest matchers for asserting on DOM nodes.\n// allows you to do things like:\n// expect(element).toHaveTextContent(/react/i)\n// learn more: https://github.com/testing-library/jest-dom\nimport '@testing-library/jest-dom';\n","const tables = {\n    \"1\": {\n        \"tex\": `\\begin{table}[t!]\n\\small\n\\centering\n\\begin{tabular}{|l|c|} \n\\hline\n\\textbf{Model} & \\textbf{Accuracy}\\\\  \n\\hline\nEnsembling multiple instances  &\\\\ \nof multiple models & 0.741\\\\\n\\hline\nEnsembling multiple instances &\\\\ \nof one model & 0.726\\\\\n\\hline\nAdding $|x_{1}^{2}-x_{2}^{2}|$ to the concatenated features& \\\\\nTest time data augmentation & 0.730\\\\\n\\hline\nAdding batch normalization layers & \\\\\nand improving sampling & 0.685 \\\\\n\\hline\nAdding dropout layers & 0.633\\\\\n\\hline\nAdding training pairs & 0.579\\\\ \n\\hline\nAdding a dropout layer & 0.525\\\\\n\\hline\nBaseline model & 0.510\\\\\n\\hline\n\\end{tabular}\n\\end{table}`,\n        \"caption\": \"Human ablation study: A ranking of different methods that we use to improve our models. Multiple ablation experiments are performed on a smaller dataset consisting of 5,045 training images and 4,437 test images for faster turnaround time. Each improvement in ranking represents an enhancement on top of the prior model. The best performing method consisted of an ensemble of multiple models with different architectures.\",\n        \"width\": \"80%\"\n    },\n    \"5\": {\n        \"tex\": `\\begin{table*}[t!]\n    \\scriptsize\n    \\centering\n    \\begin{tabular}{|lc|c|ccc|cccc|cccc|} \n    \\hline\n    \\textbf{User} & \\textbf{Year} & \\textbf{Avg.} & \\textbf{BB} & \\textbf{SIBS} & \\textbf{SS} & \\textbf{FD} & \\textbf{FS} & \\textbf{MD} & \\textbf{MS} & \\textbf{GFGD} & \\textbf{GFGS} & \\textbf{GMGD} & \\textbf{GMGS}\\\\\n    \\hline\nzxm123 & 2021 &\t0.80 (1)&  0.82 (1)&\t0.80 (1)&\t0.84 (1)&\t0.75 (4)&\t0.82 (1)&\t0.80 (1)&\t0.77 (2)&\t0.76 (3)&\t0.71 (4)&\t0.75 (2)&\t0.59 (10)\\\\\nvuvko &\t2020 & 0.78 (2)&\t0.80 (2)&\t0.77 (2)&\t0.80 (2)&\t0.75 (7)&\t0.81 (5)&\t0.78 (2) &\t0.74 (7) & 0.78 (2)&\t0.69 (6)&\t0.76 (1)&\t0.60 (9)\\\\\n\\textbf{nc2893} & 2021 & 0.77 (3)&\t0.79 (3)&\t0.75 (4)&\t0.79 (3)&\t0.76 (2)&\t0.78 (12)&\t0.75 (7)&\t0.74 (9)&\t0.70 (15)&\t0.67 (9)&\t0.70 (8)&\t0.59 (10)\\\\\n\\textbf{jh3450} & 2021 & 0.77 (3)&\t0.79 (3)&\t0.75 (4)&\t0.79 (3)&\t0.76 (2)&\t0.78 (12)&\t0.75 (7)&   0.74 (9)&\t0.70 (15)&\t0.67 (9)&\t0.70 (8)&\t0.59 (10)\\\\\n\\textbf{paw2140} & 2021 & 0.77 (4)&\t0.78 (4)&\t0.75 (5)&\t0.79 (4)&\t0.75 (6)&\t0.78 (12)&\t0.76 (4)&\t0.74 (8)&\t0.68 (18)&\t0.69 (7)&\t0.72 (5)&\t0.59 (10)\\\\\nDeepBlueAI & 2020 & 0.76 (5)&\t0.77 (5)&\t0.75 (6)&\t0.77 (5)&\t0.74 (8)&\t0.81 (6)&\t0.75 (6)& 0.74 (10) & 0.72 (7)&\t0.73 (3)&\t0.67 (11)&\t0.68 (1)\\\\\nustc-nelslip & 2021 & 0.76 (6)&\t0.75 (6)&\t0.72 (9)&\t0.74 (8)&\t0.76 (3)&\t0.82 (2)&\t0.75 (8) & 0.75 (4) & 0.79 (1)&\t0.69 (7)&\t0.76 (1)&\t0.67 (2)\\\\\n\\hline\n\\end{tabular}\n\\end{table}`,\n        \"caption\": \"RFIW kinship verification accuracy scores of top 7 entries in 2020-2021. The Table shows accuracy for each of the 11 types of relationships (three sibling pairs BB, SIBS, SS; four parent-child FD, FS, MD, MS; and four grandparent-grandchild relationships GFGD, GFGS, GMGD, GMGS) and the average accuracy. Our top 3 entries in the competition are shown in bold.\",\n        \"width\": \"80%\"\n    },\n    \"6\": {\n        \"tex\": `\\begin{table*}[t!]\n    \\centering\n    \\begin{tabular}{|l|c|ccc|cccc|}\n    \\hline\n    \\textbf{Method} & \\textbf{Average} & \\textbf{BB} & \\textbf{SIBS} & \\textbf{SS} & \\textbf{FD} & \\textbf{FS} & \\textbf{MD} & \\textbf{MS}\\\\\n    \\hline\nEnsemble & 0.77 & 0.80 & 0.77 & 0.80 & 0.74 & 0.76 & 0.77 & 0.75\\\\\n\\hline\nCodex model variant 1 & 0.75 & 0.78 & 0.75 & 0.78 & 0.71 & 0.73 & 0.75 & 0.72\\\\\nCodex model variant 2 & 0.76 & 0.80 & 0.76 & 0.79 &\t0.72 & 0.76 & 0.76 & 0.72\\\\ \n\\hline\nHuman model variant 1 & 0.75 & 0.78 & 0.74 & 0.78 & 0.73 & 0.75 & 0.75 & 0.73\\\\ \nHuman model variant 2 & 0.76 & 0.79 & 0.76 & 0.79 & 0.75 & 0.77 & 0.75 & 0.75\\\\\n\\hline\n\\end{tabular}\n\\end{table}`,\n        \"caption\": \"RFIW kinship verification accuracy scores of our ensemble, Codex model variants, and human model variants. Human model variant 1 is based on ResNet50 and human model variant 2 is based on SENet50. Codex model variants consists of multiple fully connected layers written automatically given the human model variants. Finally, we ensemble all four model variations, for our best results.\",\n        \"width\": \"80%\"\n    },\n    \"7\": {\n        \"tex\": `\\begin{table}[b!]\n\\small\n\\centering\n\\begin{tabular}{|l|c|c|} \n\\hline\n\\textbf{Split} & \\textbf{\\# single unique faces} & \\textbf{\\# of families}\\\\\n\\hline\nTraining & $21,920$ & $571$\\\\\n\nValidation & $5,045$ & $192$\\\\\n\nTest & $5,226$ & $190$\\\\\n\\hline\nTotal & $32,191$ & $953$\\\\\n\\hline\n\\end{tabular}\n\\end{table}`,\n        \"caption\": \"Dataset splits: Number of unique faces and number of families used for training, validation, and testing.\",\n        \"width\": \"80%\"\n    },\n};\n\nexport default tables;","var map = {\n\t\".\": 45,\n\t\"./\": 45,\n\t\"./Abstract\": 74,\n\t\"./Abstract.js\": 74,\n\t\"./App\": 40,\n\t\"./App.css\": 201,\n\t\"./App.js\": 40,\n\t\"./App.test\": 117,\n\t\"./App.test.js\": 117,\n\t\"./Authors\": 73,\n\t\"./Authors.js\": 73,\n\t\"./Figure\": 75,\n\t\"./Figure.js\": 75,\n\t\"./_config.yml\": 485,\n\t\"./architecture.jpg\": 486,\n\t\"./authorlist\": 76,\n\t\"./authorlist.js\": 76,\n\t\"./figures\": 77,\n\t\"./figures.js\": 77,\n\t\"./figures/architecture.png\": 487,\n\t\"./figures/face-relationships.png\": 488,\n\t\"./index\": 45,\n\t\"./index.css\": 116,\n\t\"./index.js\": 45,\n\t\"./instructions.txt\": 489,\n\t\"./logo.svg\": 490,\n\t\"./metadata\": 25,\n\t\"./metadata.js\": 25,\n\t\"./reportWebVitals\": 78,\n\t\"./reportWebVitals.js\": 78,\n\t\"./setupTests\": 168,\n\t\"./setupTests.js\": 168,\n\t\"./tables\": 192,\n\t\"./tables.js\": 192\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 200;","const metadata = {\n    img: \"\",\n    abstract: \"Kinship verification is the task of determining whether a parent-child, sibling, or grandparent-grandchild relationship exists between two people and is important in social media applications, forensic investigations, finding missing children, and reuniting families. We demonstrate high quality kinship verification by participating in the 2021 Recognizing Families in the Wild challenge which provides the largest publicly available dataset in the field. Our approach is among the top 3 winning entries in the competition. We ensemble models written by both human experts and a foundation model, OpenAI Codex, trained on text and code. We use Codex to generate model variants, and also demonstrate its ability to generate entire running programs for kinship verification tasks of specific relationships.\",\n    tldr: \"First use of OpenAI Codex for winning top 3 in an international common task framework competition.\",\n    venue: \"IEEE International Conference on Automatic Face and Gesture Recognition\",\n    paper: \"https://arxiv.org/abs/2110.07020\",\n    bibtex: `@misc{huang20213,\n    title={Top 3 in FG 2021 Families In the Wild Kinship Verification Challenge}, \n    author={Junyi Huang and Maxwell Benjamin Strome and Ian Jenkins and Parker Williams and Bo Feng and Yaning Wang and Roman Wang and Vaibhav Bagri and Newman Cheng and Iddo Drori},\n    year={2021},\n    eprint={2110.07020},\n    archivePrefix={arXiv},\n    primaryClass={cs.CV}\n}`,\n    github: \"https://github.com/newman-cheng/Codex-FG2021\"\n};\n\nexport default metadata;","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Container, Navbar, Col, Row, Dropdown, Button, ButtonGroup } from \"react-bootstrap\";\nimport Authors from \"./Authors\";\nimport Abstract from \"./Abstract\";\nimport Figure from \"./Figure\";\nimport authorlist from \"./authorlist\";\nimport metadata from \"./metadata\";\nimport figures from \"./figures\";\n\nconst App = () => {\n    return (\n        <Container fluid style={{width: \"100%\", paddingLeft: 0, paddingRight: 0}}>\n            <Container fluid style={{width: \"100%\"}}>\n                <br/><br/>\n                <h2 align=\"center\"><b>Top 3 in FG 2021 Families in the Wild kinship verification challenge</b></h2>\n                <Authors authors={authorlist} venue={metadata.venue} paper={metadata.paper} github={metadata.github} number={false}/>\n            </Container>\n            <Container fluid>\n                <Abstract abstract={metadata.abstract} tldr={metadata.tldr}/>\n                <br/><br/>\n                <Row>\n                    {Object.entries(figures).map(([k, v], i) => (<Figure key={i} number={k.replace(\"F\", \"\")} width={v.width} img={v.image} caption={v.caption} maxWidth={v.maxWidth ? v.maxWidth : \"100%\"}></Figure>))}\n                </Row>\n                <Row align=\"center\"><h4 style={{paddingTop: 40}}><b>BibTeX</b></h4></Row>\n                <Row><pre style={{width: \"80%\", margin: \"0 auto\", backgroundColor: \"rgba(240, 244, 248, 1)\", padding: 20, borderRadius: 8, fontFamily: \"monospace\"}}>{metadata.bibtex}</pre></Row>\n            </Container>\n            <p align=\"center\" style={{fontSize: 12, color: \"gray\"}}>Updated August 19th 2021.</p>\n        </Container>\n    );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export default __webpack_public_path__ + \"static/media/_config.98dd42d0.yml\";","export default __webpack_public_path__ + \"static/media/architecture.afc6b580.jpg\";","export default __webpack_public_path__ + \"static/media/architecture.1ff0f2ef.png\";","export default __webpack_public_path__ + \"static/media/face-relationships.7a526b73.png\";","export default __webpack_public_path__ + \"static/media/instructions.18ff8d39.txt\";","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nconst Authors = (props) => {\n    let authors = [];\n    let institutions = {};\n    \n    var i = 1;\n    for (const author of props.authors) {\n        const inst = author.institution.split(\",\").map((x) => x.trim());\n        for (const institution of inst) {\n            if (!institutions[institution]) {\n                institutions[institution] = i;\n                i++;\n            }\n        }\n        authors.push(\n            <React.Fragment>\n                <a href={author.url}>{author.name}</a>\n                {props.number ? <sup>{inst.map((institution) => institutions[institution]).join(\",\")}</sup> : null}<span>{(author == props.authors[props.authors.length - 1]) ? \"\" : \", \"}</span>\n            </React.Fragment>\n        );\n    }\n\n    return (\n        <Container style={{paddingBottom: 0, width: \"100%\"}} className=\"justify-content-md-left\" fluid>\n            <Row>\n                <h6 align=\"center\">{authors}</h6>\n            </Row>\n            <Row>\n                <p align=\"center\">{Object.entries(institutions).map(([inst, i], n) => (<React.Fragment>{props.number ? <sup>{i}</sup> : null}{inst}<span>{(n == (Object.keys(institutions).length - 1)) ? \"\" : \", \"}</span></React.Fragment>))}</p>\n            </Row>\n            <Row>\n                <p align=\"center\"><b>{props.venue}</b></p>\n            </Row>\n            <Row>\n                <h5 align=\"center\"><a href={props.paper} target=\"_blank\">[Paper]</a> <a href={props.github} target=\"_blank\">[Github]</a></h5>\n            </Row>\n        </Container>\n    );\n}\n\nexport default Authors;\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nconst Abstract = (props) => {\n\n    return (\n        <Container style={{paddingTop: 10, width: \"100%\"}} className=\"justify-content-md-left\" fluid>\n            {/* <Row align=\"center\"> */}\n                {/* <Col><img src={require(\"\" + props.img).default} style={{width: \"80%\", margin: \"0 auto\"}}/></Col> */}\n            {/* </Row> */}\n            <br/>\n            {/* <Row align=\"center\"> */}\n                {/* <p align=\"justify\" style={{width: \"80%\", margin: \"0 auto\"}}><b>tl;dr: </b>{props.tldr}</p> */}\n            {/* </Row> */}\n            <br/>\n            <Row align=\"center\">\n                <p align=\"justify\" style={{width: \"80%\", margin: \"0 auto\"}}><b>Abstract: </b>{props.abstract}</p>\n            </Row>\n        </Container>\n    );\n}\n\nexport default  Abstract;\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nconst Figure = (props) => {\n\n    return (\n        <Container style={{paddingTop: 10, width: \"100%\"}} className=\"justify-content-md-left\" fluid>\n            <Row>\n                <Col align=\"center\"><img src={require(\"\" + props.img).default} style={{width: props.width, maxWidth: props.maxWidth, margin: \"0 auto\"}}/></Col>\n            </Row>\n            <Row>\n                <p align=\"justify\" style={{width: props.width, maxWidth: props.maxWidth, margin: \"0 auto\"}}><b>{`Figure ${props.number}. `}</b>{props.caption}</p>\n                <br/><br/><br/><br/>\n            </Row>\n        </Container>\n    );\n}\n\nexport default Figure;\n","const authorlist = [\n    {\n        name: \"Junyi Huang\",\n        institution: \"Columbia University\",\n        url: \"\"\n    },\n    {\n        name: \"Maxwell Benjamin Strome\",\n        institution: \"Columbia University\",\n        url: \"https://www.linkedin.com/in/maxwell-strome-778401150/\"\n    },\n    {\n        name: \"Ian Jenkins\",\n        institution: \"Columbia University\",\n        url: \"https://www.linkedin.com/in/ipj/\"\n    },\n    {\n        name: \"Parker Williams\",\n        institution: \"Columbia University\",\n        url: \"https://www.linkedin.com/in/parkerawilliams/\"\n    },\n    {\n        name: \"Bo Feng\",\n        institution: \"Columbia University\",\n        url: \"https://www.linkedin.com/in/bo-feng-cu/\"\n    },\n    {\n        name: \"Yaning Wang\",\n        institution: \"Columbia University\",\n        url: \"https://www.linkedin.com/in/liamyaningwang/\"\n    },\n    {\n        name: \"Roman Wang\",\n        institution: \"Columbia University\",\n        url: \"https://www.linkedin.com/in/roman-wang-1019a77a/\"\n    },\n    {\n        name: \"Vaibhav Bagri\",\n        institution: \"Columbia University\",\n        url: \"https://www.linkedin.com/in/vaibhav-bagri/\"\n    },\n    {\n        name: \"Newman Cheng\",\n        institution: \"Columbia University\",\n        url: \"https://www.linkedin.com/in/newman-cheng/\"\n    },\n    {\n        name: \"Iddo Drori\",\n        institution: \"Massachusetts Institute of Technology\",\n        url: \"https://www.mit.edu/~idrori/\"\n    }\n];\n\nexport default authorlist;","const figures = {\n    \"F1\": {\n        \"image\": \"./figures/face-relationships.png\",\n        \"caption\": \"Example face pairs of each of the 11 relationship type in the FIW dataset: (i) Three sibling pairs: Brother-Brother(BB), Sister-Sister(SS), Brother-Sister(SIBS) (bottomleft column); (ii) Four parent-child pairs: Father-Daughter(FD), Father-Son(FS), Mother-Daughter(MD), Mother-Son(MS) (center  column); (iii) Four granparent-grandchildpairs: Grandfather-Granddaughter(GFGD), Grandfather-Grandson(GFGS), Grandmother-Granddaughter(GMGD), Grandmother-Grandson(GMGS) (right  column); and Non-kin (top left column).\",\n        \"width\": \"80%\",\n        \"maxWidth\": \"800px\"\n    },\n    \"F2\": {\n        \"image\": \"./figures/architecture.png\",\n        \"caption\": \"System architecture: We use multiple deep Siamese networks. A pair of images for verification are fed through a pre-trained convolutional backbone. The backbones project the images into a latent feature space which are flattened and then combined by feature fusion. The result of the feature fusion is fed through a fully connected network in which the final layer is a single binary classification predicting kin or non-kin. We ensemble multiple Siamese networks written by both human experts and OpenAI Codex.\",\n        \"width\": \"80%\"\n    }\n};\n\nexport default figures;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n"],"sourceRoot":""}